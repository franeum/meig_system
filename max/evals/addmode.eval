
if $x2 == null
then
if	wrap($x1).'add' == 'preset'
then
	directout(2, 'get_randomID' 1)
	directout(1, 'getnumvoices')
;


if wrap(directin(3)).'note':1 == 1
then
$slots = wrap(directin(3)).'note':(3 2 4).'slots'
;
	if wrap(directin(3)).'note':1 == 1
then

	directout(2, 'get_preset'
			##		wrap(directin(3)).'note':(3 2 4).'slots'.9
					$slots.9
					wrap(directin(3)).'note':(3 1)
					$slots.11
			##		wrap(directin(3)).'note':(3 2 4).'slots'.11
				)
	directout(1, 'preventedit' wrap('notes' 'create'))

	directout(1, 'getnumvoices')
;


if $x2 == 'change'
	then
if	wrap($x1).'add' == 'preset'

	then

		$addpreset = 

				wrap('voice' 1)
				wrap('duration' 0)
				wrap('addslot'
					wrap(23 'blacksquare')
					wrap(11 'preset')
					wrap(9 wrap(directin(4)).'randomID':1)
					)
				wrap('slottoname' 9)
			##	wrap('name' wrap(directin(4)).'randomID':1)
			##	wrap('nametoslot' 9)
			##	wrap('getnumvoices')
				wrap('hidevoices' 0 0 1:* wrap(directin(3)).'numvoices' - 2)
				wrap('preventedit' wrap('notes' 'create')
				)
		
	

	;

if $x2 == 'change'
	then
if	wrap($x1).'add' == 'preset'
			then

	##		directout(2, 'get_preset'
	##				wrap(directin(4)).'randomID':1)
	##		&&

		
			for
				$l in $addpreset with @maxdepth 1
			do
				directout(1, flat($l @maxlevel 1))
			

;


############

if	$x1:1 == 'presetvalues'
then
	directout(1,
			'addslot'
				wrap(8 wrap('presetvalues' wrap($x1).'presetvalues')))
;






if wrap(directin(3)).'note':2 == 2 then unkeep $event_id else keep $event_id;
init $event_id = wrap(directin(3)).'note':(3 2 4).'slots'.9;
keep $event_id;
##print($event_id, "event_id = ");


if wrap(directin(3)).'note':2 == 2 then unkeep $event_onset else keep $event_onset;
init $event_onset = wrap(directin(3)).'note':(3 1);
keep $event_onset;
##print($event_onset, "event_onset = ");



if $x2 == null
then
if	wrap($x1).'add' == 'event'
then
	##directout(2, 'get_randomID' 1)
	directout(2, 'get_event')
	directout(1, 'getnumvoices')


;

	if wrap(directin(3)).'note':1 == 2
then
	directout(2, 'get_event' $event_id wrap(directin(3)).'note':(3 2 4).'slots'.11)
	directout(1, 'preventedit' wrap('notes' 'create'))
	directout(1, 'hidevoices'
						subs(0 0 1:* length(directin(1).'voicenames') - 2,
									for $x in flat(wrap(directin(3)).'note':(3 2 4).'slots'.8:(1 3))
								collect findaddrs(directin(1).'voicenames', $x),
						0, 1, 1))
	directout(1, 'getnumvoices')
	directout(1, 'select' $event_id)
	##directout(1, 'addslot'
;


#####




if $x2 == 'change'
	then
if wrap($x1).'add' == 'event'

	then
		
		##directout(2, 'get_randomID' 1)
	
		$addevent = 
				wrap('voice' 2)
				wrap('duration' 0)
				wrap('addslot'
						wrap(23 'blacktriangle')
						wrap(11 'event')
						wrap(9 wrap(directin(4)).'randomID':1)
						wrap(8 wrap('event_params' wrap(directin(2)).'event_params')))
				wrap('slottoname' 9)
			##	wrap('name' wrap(directin(4)).'randomID':2)
			##	wrap('nametoslot' 9)
				wrap('dump')
					wrap('hidevoices'
							subs(0 0 1:* wrap(directin(3)).'numvoices' - 2,
								for $x in flat(wrap(directin(2)).'event_params':2)
								collect findaddrs(directin(1).'voicenames', $x),
									0, 1, 1))
				wrap('preventedit' wrap('notes' 'create'))


;


if $x2 == 'change'
	then
if wrap($x1).'add' == 'event'
	then

for
				$l in $addevent with @maxdepth 1
			do
				directout(1, flat($l @maxlevel 1)) 



##############

;


##if $x2 == 'change'
##then
if wrap($x1).'add' == 'autom'
then
	directout(1, 'dumpselection')
	directout(2, 'get_randomID' 1)


			$addautom =
	
				wrap('onset'
						if wrap(directin(3)).'note':(3 1) < $event_onset
						then $event_onset
						else wrap(directin(3)).'note':(3 1))
				wrap('addslot' wrap(23 'cross') wrap(10 wrap(directin(4)).'randomID':1)
						wrap(11 nth(directin(1).'voicenames', wrap(directin(3)).'note':2)) 
							)
				wrap('slottoname' 10)
				wrap('name' $event_id)
				wrap('nametoslot' 9)
				wrap('preventedit' wrap('notes' 'create'))
				wrap('dump')

 ;


if $x2 == 'change'
then
if wrap($x1).'add' == 'autom'

then

			directout(2, 'post_autom' wrap(directin(4)).'randomID':1)
			&&
			for
				$l in $addautom with @maxdepth 1
			do
				directout(1, flat($l @maxlevel 1))
			
##;

##directout(1, 'dump') 